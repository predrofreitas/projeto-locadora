// <auto-generated />
using System;
using Locadora.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Locadora.Dados.Migrations
{
    [DbContext(typeof(LocadoraContext))]
    [Migration("20210804024332_TipoMidia")]
    partial class TipoMidia
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Locadora.Dominio.Entidades.Aluguel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aberto")
                        .HasColumnType("bit");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Aluguel");
                });

            modelBuilder.Entity("Locadora.Dominio.Entidades.AluguelItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AluguelId")
                        .HasColumnType("int");

                    b.Property<int?>("MidiaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AluguelId");

                    b.HasIndex("MidiaId");

                    b.ToTable("AluguelItem");
                });

            modelBuilder.Entity("Locadora.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Locadora.Dominio.Entidades.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MidiaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MidiaId");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("Locadora.Dominio.Entidades.Midia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<string>("TipoMidia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Midia");
                });

            modelBuilder.Entity("Locadora.Dominio.Entidades.Aluguel", b =>
                {
                    b.HasOne("Locadora.Dominio.Entidades.Cliente", "Cliente")
                        .WithMany("Alugueis")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Locadora.Dominio.Entidades.AluguelItem", b =>
                {
                    b.HasOne("Locadora.Dominio.Entidades.Aluguel", "Aluguel")
                        .WithMany()
                        .HasForeignKey("AluguelId");

                    b.HasOne("Locadora.Dominio.Entidades.Midia", "Midia")
                        .WithMany("AluguelItem")
                        .HasForeignKey("MidiaId");

                    b.Navigation("Aluguel");

                    b.Navigation("Midia");
                });

            modelBuilder.Entity("Locadora.Dominio.Entidades.Estoque", b =>
                {
                    b.HasOne("Locadora.Dominio.Entidades.Midia", "Midia")
                        .WithMany()
                        .HasForeignKey("MidiaId");

                    b.Navigation("Midia");
                });

            modelBuilder.Entity("Locadora.Dominio.Entidades.Cliente", b =>
                {
                    b.Navigation("Alugueis");
                });

            modelBuilder.Entity("Locadora.Dominio.Entidades.Midia", b =>
                {
                    b.Navigation("AluguelItem");
                });
#pragma warning restore 612, 618
        }
    }
}
